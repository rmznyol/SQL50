1077. Project Employees III

SELECT project_id, employee_id
FROM (
    SELECT p.project_id, e.employee_id,
    RANK() OVER(PARTITION BY p.project_id ORDER BY e.experience_years DESC) as rnk
    FROM Project as p
    INNER JOIN Employee as e 
    ON e.employee_id = p.employee_id
) as t
WHERE rnk = 1
################################################################################


################################################################################
1596. The Most Frequently Ordered Products for Each Customer

WITH cte1 as (
  SELECT o.customer_id, o.product_id, p.product_name,
  COUNT(*) OVER(PARTITION BY o.customer_id, product_id) as cnt
  FROM Orders as o
  INNER JOIN Products as p
  ON o.product_id = p.product_id
),
cte2 as (
  SELECT customer_id, product_id, product_name, cnt,
  MAX(cnt) OVER(PARTITION BY customer_id) as mx
  FROM cte1
)
SELECT customer_id, product_id, product_name
FROM cte2
WHERE cnt = mx
GROUP BY customer_id, product_id, product_name
################################################################################



################################################################################
1412. Find the Quiet Students in All Exams

WITH cte AS(
    SELECT student_id,
    CASE WHEN score = MIN(score) OVER (PARTITION BY exam_id) THEN 1
    WHEN score = MAX(score) OVER (PARTITION BY exam_id) THEN 1
    ELSE 0 
    END as flag
    FROM Exam
)
SELECT student_id, student_name
FROM Student
WHERE student_id IN (SELECT student_id FROM cte WHERE flag = 0) 
AND student_id NOT IN (SELECT student_id FROM cte WHERE flag = 1)